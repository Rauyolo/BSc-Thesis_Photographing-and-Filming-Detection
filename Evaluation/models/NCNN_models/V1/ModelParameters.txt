For non-quantized model use:

// enter locations of .param and .bin files for NCNN evaluation
const char* paramFile = "../models/NCNN_models/V1/yolo-fastestv2-opt.param";
const char* binFile = "../models/NCNN_models/V1/yolo-fastestv2-opt.bin";

// folder where resulting PR curve data will be stored
const char* destPath = "../models/NCNN_models/V1/results/";

const bool quantization = false;

// enter anchor bias corresponding to the selected model
const std::vector<float> anchors {11.52,19.71, 34.37,52.14, 77.47,96.86, 117.81,223.21, 197.90,131.73, 274.62,287.37};

// true if camera and mobile phone class were combined in one in the model
const bool camAndPhoneCombined = false;

// order matters, use same as in the training
const static std::string class_names[] = {
    "Human_face", "Mobile_phone", "Camera"
};

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

For quantized model use:

// enter locations of .param and .bin files for NCNN evaluation
const char* paramFile = "../models/NCNN_models/V1/yolo-fastestv2-int8.param";
const char* binFile = "../models/NCNN_models/V1/yolo-fastestv2-int8.bin";

// folder where resulting PR curve data will be stored
const char* destPath = "../models/NCNN_models/V1/results/";

const bool quantization = true;

// enter anchor bias corresponding to the selected model
const std::vector<float> anchors {11.52,19.71, 34.37,52.14, 77.47,96.86, 117.81,223.21, 197.90,131.73, 274.62,287.37};

// true if camera and mobile phone class were combined in one in the model
const bool camAndPhoneCombined = false;

// order matters, use same as in the training
const static std::string class_names[] = {
    "Human_face", "Mobile_phone", "Camera"
};

