For non-quantized camera model use:

// enter locations of .param and .bin files for NCNN evaluation
const char* paramFile = "../models/NCNN_models/V2/yolo-fastestv2-opt_camera.param";
const char* binFile = "../models/NCNN_models/V2/yolo-fastestv2-opt_camera.bin";

// folder where resulting PR curve data will be stored
const char* destPath = "../models/NCNN_models/V2/results/";

const bool quantization = false;

// enter anchor bias corresponding to the selected model
const std::vector<float> anchors {38.98,40.81, 77.58,94.43, 115.39,234.96, 179.64,115.53, 243.35,210.96, 284.08,313.04};

// true if camera and mobile phone class were combined in one in the model
const bool camAndPhoneCombined = true;

// order matters, use same as in the training
const static std::string class_names[] = {
    "Camera"
};

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

For quantized camera model use:

// enter locations of .param and .bin files for NCNN evaluation
const char* paramFile = "../models/NCNN_models/V2/yolo-fastestv2-int8_camera.param";
const char* binFile = "../models/NCNN_models/V2/yolo-fastestv2-int8_camera.bin";

// folder where resulting PR curve data will be stored
const char* destPath = "../models/NCNN_models/V2/results/";

const bool quantization = true;

// enter anchor bias corresponding to the selected model
const std::vector<float> anchors {38.98,40.81, 77.58,94.43, 115.39,234.96, 179.64,115.53, 243.35,210.96, 284.08,313.04};

// true if camera and mobile phone class were combined in one in the model
const bool camAndPhoneCombined = true;

// order matters, use same as in the training
const static std::string class_names[] = {
    "Camera"
};

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

For non-quantized face model use:

// enter locations of .param and .bin files for NCNN evaluation
const char* paramFile = "../models/NCNN_models/V2/yolo-fastestv2-opt_face.param";
const char* binFile = "../models/NCNN_models/V2/yolo-fastestv2-opt_face.bin";

// folder where resulting PR curve data will be stored
const char* destPath = "../models/NCNN_models/V2/results/";

const bool quantization = false;

// enter anchor bias corresponding to the selected model
const std::vector<float> anchors {7.93,14.19, 18.07,31.59, 33.11,56.43, 57.30,90.38, 100.60,145.96, 200.42,230.04};

// true if camera and mobile phone class were combined in one in the model
const bool camAndPhoneCombined = true;

// order matters, use same as in the training
const static std::string class_names[] = {
    "Human_face"
};

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

For quantized face model use:

// enter locations of .param and .bin files for NCNN evaluation
const char* paramFile = "../models/NCNN_models/V2/yolo-fastestv2-int8_face.param";
const char* binFile = "../models/NCNN_models/V2/yolo-fastestv2-int8_face.bin";

// folder where resulting PR curve data will be stored
const char* destPath = "../models/NCNN_models/V2/results/";

const bool quantization = true;

// enter anchor bias corresponding to the selected model
const std::vector<float> anchors {7.93,14.19, 18.07,31.59, 33.11,56.43, 57.30,90.38, 100.60,145.96, 200.42,230.04};

// true if camera and mobile phone class were combined in one in the model
const bool camAndPhoneCombined = true;

// order matters, use same as in the training
const static std::string class_names[] = {
    "Human_face"
};
